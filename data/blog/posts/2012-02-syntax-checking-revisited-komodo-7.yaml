---
:id: 2012-02-syntax-checking-revisited-komodo-7
:slug: 2012-02-syntax-checking-revisited-komodo-7
:title: Syntax Checking Revisited in Komodo 7
:date: !ruby/object:DateTime 2012-02-08 00:00:00.000000000 -05:00
:tags:
- css
- javascript
- komodo 7
- linting
- perl
- python
- syntax
:body: ! "\n<div>\n  \t\t\n               <img title=\"Komodo IDE: Better Syntax Checking\"
  alt=\"Komodo IDE: Better Syntax Checking\" style=\"width: auto\" src=\"/assets/images/blog/2012-02/ins-komodo-ide-7.jpg\"
  class=\"as_feature_img as_left\"><p><a target=\"_new\" href=\"http://www.activestate.com/komodo-ide\">Komodo</a>
  has always been adept at working with multiple languages. When we realized that
  multi-language templating systems were becoming more common, we made it easier to
  create new colorizers for them. But until now, Komodo wasn't very flexible at checking
  the syntax of these documents.</p>\n  \n  <p>For example, Komodo has always supported
  running HTML documents through HTML Tidy, which can be quite draconian in its requirements.
  Unfortunately, HTML Tidy skips embedded CSS style and JavaScript script elements,
  so those have to be checked manually at runtime. And as most web developers know
  too well, most browsers respond to errors in CSS and JavaScript with the silent
  treatment. You have to test by looking for what's missing, always a recipe for frustration.</p>\n
  \ \n  <h2>Checking Parts</h2>\n  \n  <p>Komodo 7 now identifies the different parts
  of a document, and hands each part over to a particular syntax checker. It then
  collects any error or warning messages from the different checkers, weaves them
  back together, and presents them all in one shot. We even integrated the Syntax
  Checking Status panel from <a target=\"_new\" href=\"http://community.activestate.com/forum-topic/klint-komodo-lint-syntax-checker-messages-tabbed-window\">Davide
  Ficano's KLint extension</a>, so now you can see all the highlighted parts of a
  document in one view. Figure 1 shows a typical snapshot with the classic Komodo
  HTML sample file with some errors introduced.</p>\n  <p>\n    \n    <a rel=\"shadowbox[Screenshots]\"
  href=\"http://activestate.com/sites/default/files/blog_import_images/syntax01_01.png\"><img
  title=\"Syntax Errors in 3 Languages\" alt=\"Syntax Errors in 3 Languages\" style=\"width:
  auto\" src=\"/assets/images/blog/2012-02/syntax01-01.png\" class=\"as_feature_img
  as_left\"></a>\n  </p>\n  \n  <p>The syntax checker also looks at JavaScript and
  CSS fragments in HTML code as well -- these are the contents of event-handling and
  \"style\" attributes. Figure 2 shows Komodo complaining about a missing quote in
  a handler.</p>\n  \n  <p>\n    <a rel=\"shadowbox[Screenshots]\" href=\"http://activestate.com/sites/default/files/blog_import_images/syntax01_02_js.png\"><img
  title=\"Syntax Error in a JavaScript Handler\" alt=\"Syntax Error in a JavaScript
  Handler\" style=\"width: auto\" src=\"/assets/images/blog/2012-02/syntax01-02-js.png\"
  class=\"as_feature_img as_left\"></a>\n  </p>\n  \n  <h2>Multiple Choices</h2>\n
  \ \n  <p>Since the syntax checking internals were redesigned to handle multiple
  languages, we also made it easier to select different checkers for a particular
  language. Perl programmers had this option in earlier versions, where they could
  install Perl-Critic and choose which of its levels to use to examine Perl code.
  Now we've expanded this choice to several other languages.</p>\n  \n  <p>JavaScript
  programmers can select jslint (or the more recent jshint), configure it, and have
  their JS code checked for problems other than missing return statements. We also
  found not one but two Perl modules, <a target=\"_new\" href=\"http://search.cpan.org/~petdance/HTML-Tidy-1.54/lib/HTML/Tidy.pm\">HTML-Tidy</a>
  and <a target=\"_new\" href=\"http://search.cpan.org/~petdance/HTML-Lint-2.10/lib/HTML/Lint.pm\">HTML-Lint</a>,
  that have different takes on checking HTML code. You'll need to install these modules
  in your local Perl library to access them.</p>\n  \n  <p>Similarly, we've added
  support for three other Python syntax checkers: <a target=\"_new\" href=\"http://pypi.python.org/pypi/pylint\">pylint</a>,
  <a target=\"_new\" href=\"http://pypi.python.org/pypi/pyflakes\">pyflakes</a>, and
  <a target=\"_new\" href=\"http://pychecker.sourceforge.net/\">pychecker</a>. My
  personal preference is for the annoyingly picky pylint, but other people swear by
  pyflakes. If you're looking for a higher degree of accuracy, pychecker can supply
  that. Note that if you select it, Komodo will give a warning that pychecker actually
  loads and executes your editor's code as part of its operation. I prefer the safety
  of static checking, but if you know that your code isn't going near the file system
  or manipulating database connections, pychecker might do it for you. Figure 3 shows
  the new Syntax Checking page in Preferences, where all languages can be found. You
  can also tweak the Syntax Checking prefs on a per-file and per-project basis as
  well.\n  \n  </p>\n  <p>\n    <a rel=\"shadowbox[Screenshots]\" href=\"http://activestate.com/sites/default/files/blog_import_images/syntax01_03_jslint.png\"><img
  title=\"JSLint Options\" alt=\"JSLint Options\" style=\"width: auto\" src=\"/assets/images/blog/2012-02/syntax01-03-jslint.png\"
  class=\"as_feature_img as_left\"></a></p>\n  \n  \n  <h2>CSS Checking is Back</h2>\n
  \ \n  <p>Before version 6, Komodo relied on a CSS syntax-checking component buried
  deep in the Mozilla codebase. Then we upgraded, lost the checker, and couldn't find
  a suitable third-party CSS checker anywhere. In fact, the only ones we could find
  were online. Meanwhile, new wrappers for CSS have emerged. One thing they all have
  in common is an attempt to reduce the duplication and complexity that tend to worm
  their way into all too many real-world stylesheets. Here's the rundown on the most
  common variants:</p>\n  \n  <ul>\n  <li>\n  <strong><a target=\"_new\" href=\"http://sass-lang.com/\">Sass</a></strong>:
  an indentation-driven variant from the creators of Haml</li>\n  \n    <li>\n  <strong><a
  target=\"_new\" href=\"http://sass-lang.com/\">SCSS</a></strong>: essentially Sass
  with braces rather than whitespace</li>\n  \n    <li>\n  <strong><a target=\"_new\"
  href=\"http://lesscss.org/\">Less</a></strong>: another brace-based wrapper, with
  some overlap with SCSS</li>\n  </ul>\n  <p>Komodo now supports SCSS and Less, and
  offers syntax-checking for them as well. It turns out that Sass is syntactically
  so different from SCSS that separate coding efforts are needed to support it.</p>\n
  \ \n  <h2>Up Next: Hopping on the Brave New World of Syntax Checkers</h2>\n  \n
  \ <p>The new syntax checking system is full of extensibility points. The next article
  will cover the following topics:</p>\n  \n  <ul>\n  <li>Writing a checker (aka \"linter\")
  for your own new language</li>\n  \n    <li>Writing a new linter for a current language,
  like a better jslint</li>\n  \n    <li>Tapping into existing templating languages</li>\n
  \ \n    <li>Supporting a new templating language.</li>\n  </ul>\n  <h2>Try it yourself</h2>\n
  \ \n  <p>If you'd like to test out these new syntax checking capabilities, you can
  <a title=\"Download Komodo IDE 7 Trial\" href=\"http://activestate.com/komodo-ide/downloads\">download
  a 21-day free trial of Komodo IDE 7</a>.</p>\n  \n<p>Komodo IDE 7 is <a title=\"Buy
  Komodo IDE 7\" href=\"http://store.activestate.com/komodo-ide\">currently on sale</a>,
  starting at <strong>$245</strong> ($295) until March 15th.</p> </div>\n"
:comments: true
:author:
- :id: 4hoIr9hNNKSSQagw4mSgaY
  :name: Eric Promislow
  :biography: Eric Promislow is a senior developer who's worked on Komodo since the
    very beginning. He has a M.Sc. in Computing Science from Queen's University and
    a B.Sc. in Biophysics from the University of Ontario. Before joining ActiveState,
    he helped create the OmniMark text-processing language.
  :profilePhoto:
    :title: EricPromislow
    :url: //images.contentful.com/bj1g69m2935w/NG8IorgmqIyOaK6USkAOG/2cdb490e97ea0b4ae3fecb8817c74dbf/EricPromislow.jpg
