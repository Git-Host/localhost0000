---
:id: 2014-07-workspace-save-and-restore-macro
:slug: 2014-07-workspace-save-and-restore-macro
:title: Workspace Save and Restore Macro
:date: !ruby/object:DateTime 2014-07-07 06:00:00.000000000 -04:00
:tags:
- macro
- javascript
- restore
- workspace
:body: ! "\n<div class=\"centered\">\n<h2 style=\"font-weight: 300; margin: 10px 0
  25px 0\"><em>Macro Monday - a new macro to dig into every Monday!</em></h2>\n</div>\n\n##
  The Macro\n\nThis is a startup macro (set to trigger when Komodo starts up) that
  injects a\nmenu element (\"Workspace\") at startup into the Tools menu, allowing
  users to save the current\nworkspace (all the currently opened files) and restore
  previously saved ones. It made for\na pretty interesting macro, not only for utility
  but also for learning.  I've dug into some\ndifferent aspects of Komodo that I haven't
  played with before or had less experience with:\n\n1. [ko.filepicker](https://github.com/Komodo/KomodoEdit/blob/679c4465020309259cf95d0765962d6f785c2423/src/chrome/komodo/content/library/filepickers.p.js)\nto
  using native file save/open dialogs.\n\n2. [koFileEx](https://github.com/Komodo/KomodoEdit/blob/d3e7786b103c943b8af573b8c118ebf2dc347c8d/src/views/koFileEx.py)\nto
  programmatically generate files.\n3. Exploring ko.views.manager in the JS Shell
  in the Komodo Extension Developer\nAdd-on to see what information I could get from
  my open documents.\n\n4. Using Komodos Dom Inspector to find necessary elements
  in the Tools menu to then use\nthe [xtk.domutils](https://github.com/Komodo/KomodoEdit/blob/d3e7786b103c943b8af573b8c118ebf2dc347c8d/src/chrome/xtk/content/domutils.js)\nto
  create and append my new menu elements into the Komodo UI.\n\n## Installation\n\nTo
  install the macro simply hit the \"View Resource\" and \"Install Instructions\"\nlinks
  below.\n\nOnce installed - open the Macro properties and set the macro to trigger
  on the\n*Komodo startup event*.\n\n<div class=\"centered\">\n    <div class=\"spacer\"></div>\n
  \   <a href=\"http://komodoide.com/resources/macros/cgchoffman--worspacesaverestoretool/\"
  class=\"button big primary\">\n        <i class=\"icon icon-eye\"></i>\n        View
  Resource\n    </a>\n    <div class=\"spacer-half\"></div>\n    <span>\n        <i
  class=\"icon icon-question\"></i>\n        <a href=\"http://komodoide.com/resources/install-instructions/#pane-macro\"
  target=\"_blank\">Install Instructions</a>\n    </span>\n</div>\n\n## Related Materials\n\n*
  [Komodo Developer Extension][] - play around with JavaScript or Python code in\n
  \ the context of the Komodo window\n* [Komodo Macro API][] - to programatically
  interact with the Komodo editor -\n  available to both Python and Javascript\n*
  [Editor API][] - the Komodo editor provides a wrapper around the Scintilla API\n*
  [DOM Inspector][]- the Komodo tool for inspecting DOM elements in Komodo\n\n\n[Komodo
  Developer Extension]: /framed/?http://community.activestate.com/node/1824\n[Komodo
  Macro API]: /framed/?http://docs.activestate.com/komodo/latest/macroapi.html\n[Editor
  API]: http://www.scintilla.org/ScintillaDoc.html\n[DOM Inspector]: http://komodoide.com/resources/addons/toddwhiteman--dominspector/\n"
:comments: true
:author:
- :id: 6zO8F6VtbUEOmAAwsysqM6
  :name: Carey Hoffman
  :biography: Carey made the logical switch from snowboard instructing and treeplanting
    to the technology industry in 2009, taking database and network administration
    at BCIT. He is on the technical support and QA team for ActiveState, focusing
    on Stackato Private PaaS and the Komodo IDE where he also contributes to development.
  :profilePhoto:
    :title: CareyHoffman
    :url: //images.contentful.com/bj1g69m2935w/1MeZAzVMKIO6MmmKWkOY8m/e5e1c2e5f90671e4f2e26fe806dc16d5/CareyHoffman.jpg
