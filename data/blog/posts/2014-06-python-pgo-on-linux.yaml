---
:id: 2014-06-python-pgo-on-linux
:slug: 2014-06-python-pgo-on-linux
:title: Python Performance Boost by using Profile Guided Optimization
:date: !ruby/object:DateTime 2014-06-24 20:00:00.000000000 -04:00
:tags:
- python
- pgo
- performance
- optmization
:body: ! "\nBy using GCC PGO when building the Python interpreter, I've managed to
  achieve a\nhealthy **10% speedup** for CPU bound Python programs.\n\n## About PGO\n\nPGO
  works by compiling the program (in my case Python) with special flags,\nrunning
  that program on a benchmark test suite and then re-compiling, which will\ntake into
  account the past performance runs to better optimize the resulting\nprogram.\n\n##
  The Specs\n\nFirst up - here's what I am using:\n * Python 2.7.7\n * GCC 4.8.2\n
  * Ubuntu 14.04 (64 bit)\n * Intel Q6600 @ 2.40GHz CPU\n\nBenchmarking programs used:\n
  * pybench (part of Python source tree)\n * pyDes (encryption algorithm in pure Python)\n\n##
  Compilation steps\n\nThis is method I've used to build Python on Linux using GCC
  and PGO:\n\n```bash\n# unpack it\nwget https://www.python.org/ftp/python/2.7.7/Python-2.7.7.tgz\ntar
  xf Python-2.7.7.tgz\ncd Python-2.7.7\n\n# build it with PGO generation\nexport CFLAGS=\"-fprofile-generate\"\nexport
  CXXFLAGS=\"-fprofile-generate\"\nexport LDFLAGS=\"-fprofile-generate\"\nconfigure\nmake\n\n#
  run profile script\nmake run_profile_task  # I had to tweak the makefile to add
  LD_LIBRARY_PATH\n\n# build it again with PGO collection\nmake clean\nexport CFLAGS=\"-fprofile-use
  -fprofile-correction\"\nexport CXXFLAGS=\"-fprofile-use -fprofile-correction\"\nexport
  LDFLAGS=\"-fprofile-use -fprofile-correction\"\nmake\n\n# profit!\nmake install\n```\n\n##
  Results\n\nHere the results of PGO v's non PGO builds:\n\n<div id=\"chart_div\">\n</div>\n\nand
  the raw chart data:\n\n| Script       | Without PGO   | With PGO     | Increase
  \  |\n| ------------ | ------------- | ------------ | ---------- |\n| pybench      |
  \  4285ms      |   3792ms     |    13%     |\n| pyDes        |   5219ms      |   4733ms
  \    |    10%     |\n\n\nYou may notice that pyDes had a smaller improvement than
  pybench, and that's\ncaused by pybench being the application that the optimization
  was derived from -\nso pybench is the best case scenario. If your using PGO yourself,
  you should be\nrunning (optimizing) using your real world application, in order
  to get the most\nbenefit.\n\n## Summary\n\nSo PGO is more work during the compilation
  step - but it does have a nice\nperformance benefit one it's fully compiled.\n\nDoes
  this mean Komodo will be using PGO builds sometime in the future? We\ncertainly
  hope so, as the underlying Firefox code base does support it... we\nshould be able
  to add the other relevant parts to get a complete PGO Komodo\nbuild... and I am
  excited to take on this project!\n\n\n<script type=\"text/javascript\" src=\"https://www.google.com/jsapi\"></script>\n<script
  type=\"text/javascript\">\n  google.load(\"visualization\", \"1\", {packages:[\"corechart\"]});\n
  \ google.setOnLoadCallback(drawChart);\n  function drawChart() {\n    var data =
  google.visualization.arrayToDataTable([\n      ['Program',  'Without PGO (ms)',
  'With PGO (ms)'],\n      ['pybench',   4285,               3792],\n      ['pydes',
  \    5219,               4733],\n    ]);\n\n    var options = {\n      title: 'PGO
  Performance Comparison for Python 2.7.7 on Linux',\n      vAxis: { minValue: 0 },\n
  \   };\n\n    var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));\n
  \   chart.draw(data, options);\n  }\n</script>\n"
:comments: true
:author:
- :id: 1KZmNYa8TOCmE2KKk0EysM
  :name: Todd Whiteman
  :biography: ! 'Todd Whiteman is the Development Lead for Komodo IDE. He works adeptly
    with

    Mozilla, Python and JavaScript to ensure that Komodo IDE is the IDE of choice

    for development teams. Todd has been working on Komodo IDE for nearly 6 years,

    adding components such as the Vi Key Bindings, Distributed Source Code Control,

    64-bit Linux builds as well as Remote SSH support into Komodo IDE.'
  :profilePhoto:
    :title: ToddWhiteman
    :url: //images.contentful.com/bj1g69m2935w/1XjTWQ4gew6GyG4yMUuGQQ/54f995ac054cc228ffb45ba6d7d39313/ToddWhiteman.jpg
